
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches:
    - release2

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  REPOSITORY_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build Docker image
        id: build
        # offitial action
        uses: docker/bake-action@v5
        with:
          context: .
          # push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:latest
            
      - name: Run container
        shell: bash
        run: |
          docker version
          
          docker run --name appcontainerimage -d -p 8080:80 ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:latest
          sleep 5
          docker ps
          apk update && apk --no-cache add curl curl-dev bash
          curl "http://localhost:8080"  
     

