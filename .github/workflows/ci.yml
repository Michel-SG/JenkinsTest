name: copy files
on: 
  push:
    branches:
    - feature/1
  pull_request:
    types: [opened, edited, reopened]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: copy file
      uses: canastro/copy-file-action@master
      with:
        source: "Main.java"
        target: "appfiles/main.java"
    - name: run tests
      run: |
        cd "appfiles"
        ls
        cat main.java
    - name: Retrieve secret
      env:
        super_secret: ${{ secrets.SUPERSECRET }}
        user_secret: ${{ secrets.GITHUB_USER }}
        GH_TOKEN: ${{ secrets.TOCKEN_REGISTRY }}
      run: |
        echo $super_secret
        echo $user_secret
        echo ${{github.event_name}}
        echo "ref name :" ${{github.ref_name}}
        echo "sha :" ${{github.sha}}
        echo "repository : " ${{github.repository}}
        echo $GITHUB_BASE_REF
      
        
    - name: Validate PR checkboxes
      id: checkboxes
      env:
        GH_TOKEN: ${{ secrets.TOCKEN_REGISTRY }}
      run: |
        # Get the PR body
        echo "${{ toJson(github.event.pull_request) }}"
        echo ${{ github.event.pull_request.id }}
        echo ${{ github.event.pull_request.number }}
        echo ${{ github.event.pull_request.state }}
        echo ${{ github.event.pull_request.title }} 
        echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")" 
        
        # Define the required checkbox text
        REQUIRED_CHECKBOXES=("Task 1" "Task 2")

        # Check for each required checkbox
        # for TASK in "${REQUIRED_CHECKBOXES[@]}"; do
        #   if ! echo "$PR_BODY" | grep -qE "- \[x\] $TASK"; then
        #     echo "❌ Checkbox for '$TASK' is not checked!"
        #     exit 1
        #   fi
        # done

        # echo "✅ All required checkboxes are checked!"


    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node
      with:
        path: ./
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Dockerfile') }}
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-